@model List<SignalR_Project.Application.DTOs.UserMessageDTO>

@{
    ViewData["Title"] = "Chat Odası";
    var roomId = ViewData["RoomId"];
}

<div class="container mt-3">
    <div class="row">
        <!-- Chat Mesaj Alanı -->
        <div class="col-md-8">
            <div class="card chat-card shadow-sm">
                <div class="card-header chat-header">
                    <h4 class="mb-0">Oda: @roomId</h4>
                </div>
                <div class="card-body chat-body d-flex flex-column">
                    <ul id="ulMessages" class="list-group chat-messages flex-grow-1 mb-3">
                        @foreach (var msg in Model)
                        {
                            <li>
                                <strong>@msg.UserName</strong> (@msg.CreatedDate.ToString("HH:mm")): @msg.Text
                            </li>
                        }
                    </ul>

                    <form id="frmMessage" class="d-flex gap-2 mt-auto">
                        <input id="txtMessage" type="text" placeholder="Mesajınızı giriniz..." class="form-control" required />
                        <button type="submit" class="btn btn-primary">Gönder</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Kullanıcı Listesi -->
        <div class="col-md-4">
            <div class="card user-card shadow-sm">
                <div class="card-header user-header">
                    <h5>Kullanıcılar</h5>
                </div>
                <div class="card-body user-body p-0">
                    <ul id="ulUsers" class="list-group user-list m-0 p-0">
                        <!-- SignalR ile güncellenecek -->
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        const frmMessage = document.getElementById("frmMessage");
        const txtMessage = document.getElementById("txtMessage");
        const ulMessages = document.getElementById("ulMessages");
        const ulUsers = document.getElementById("ulUsers");

        const roomId = "@roomId";

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        frmMessage.onsubmit = function (event) {
            event.preventDefault();
            connection.invoke("SendMessage", roomId, txtMessage.value)
                .catch(err => console.error(err.toString()));
            txtMessage.value = "";
        };

        connection.on("ReceiveMessage", function (user, message, createdDate) {
            const li = document.createElement("li");
            li.textContent = `${user} (${createdDate}): ${message}`;
            ulMessages.appendChild(li);
            ulMessages.scrollTop = ulMessages.scrollHeight;
        });

        connection.on("UpdateUserList", function (users) {
            ulUsers.innerHTML = "";
            users.forEach(u => {
                const li = document.createElement("li");
                li.textContent = u;
                li.classList.add("list-group-item");
                ulUsers.appendChild(li);
            });
        });

        connection.start().then(function () {
            connection.invoke("JoinRoom", roomId)
                .catch(err => console.error(err.toString()));
        }).catch(err => console.error(err.toString()));
    </script>
}

<style>
    body {
        background-color: #2c2f33;
        color: #fff;
    }

    /* Chat Card */
    .chat-card {
        background-color: #36393f;
    }

    .chat-header {
        background-color: #5b3f8c; 
        color: #fff;
    }

    .chat-messages {
        list-style: none;
        padding: 0;
        overflow-y: auto;
        max-height: 400px;
    }

    .chat-messages li {
        padding: 8px 12px;
        border-radius: 6px;
        margin-bottom: 6px;
        background-color: #4f545c;
        color: #fff;
    }

    .chat-messages li:hover {
        background-color: #5b6eae;
    }

    /* Kullanıcı Listesi Card */
    .user-card {
        background-color: #36393f;
    }

    .user-header {
        background-color: #5b3f8c;
        color: #fff;
    }

    .user-body {
        max-height: 400px;
        overflow-y: auto;
    }

    .user-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .user-list li {
        padding: 8px 12px;
        background-color: #4f545c;
        color: #fff;
        border-bottom: 1px solid #5b6eae;
    }

    .user-list li:hover {
        background-color: #5b6eae;
    }

    .form-control {
        background-color: #2c2f33;
        color: #fff;
        border: 1px solid #4f545c;
    }

    .btn-primary {
        background-color: #7289da;
    }
</style>
